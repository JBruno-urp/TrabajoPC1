{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { gamesData } from \"../data/gamesData\";\nimport SearchBar from \"../components/SearchBar\";\nimport AppList from \"../components/AppList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchResults = _useState2[0],\n    setSearchResults = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showSearchResults = _useState4[0],\n    setShowSearchResults = _useState4[1];\n  var navigation = useNavigation();\n  var handleSearch = function handleSearch(searchText) {\n    var filteredGames = gamesData.filter(function (game) {\n      return game.name.toLowerCase().includes(searchText.toLowerCase());\n    });\n    setSearchResults(filteredGames);\n    setShowSearchResults(true);\n  };\n  var handleGameSelect = function handleGameSelect(game) {\n    navigation.navigate('AppDetails ', {\n      app: game\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(SearchBar, {\n      onSearch: handleSearch\n    }), showSearchResults ? searchResults.length === 0 ? _jsx(Text, {\n      children: \"No se encontraron juegos\"\n    }) : _jsx(AppList, {\n      data: searchResults,\n      onItemClick: handleGameSelect\n    }) : _jsx(AppList, {\n      data: gamesData,\n      onItemClick: handleGameSelect\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","View","FlatList","Text","gamesData","SearchBar","AppList","useNavigation","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","showSearchResults","setShowSearchResults","navigation","handleSearch","searchText","filteredGames","filter","game","name","toLowerCase","includes","handleGameSelect","navigate","app","children","onSearch","length","data","onItemClick"],"sources":["C:/Users/Bruno/Desktop/TrabajoPC1/Screen/HomeScreen.js"],"sourcesContent":["// src/screens/HomeScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, FlatList, Text } from 'react-native';\r\nimport { gamesData } from '../data/gamesData';\r\nimport SearchBar from '../components/SearchBar';\r\nimport AppList from '../components/AppList'; \r\nimport { useNavigation } from '@react-navigation/native'; // Importa useNavigation desde '@react-navigation/native'\r\n\r\nconst HomeScreen = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const navigation = useNavigation(); // Obtiene la instancia de navegación\r\n\r\n  const handleSearch = (searchText) => {\r\n    // Filtrar los juegos según el texto de búsqueda\r\n    const filteredGames = gamesData.filter((game) =>\r\n      game.name.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    setSearchResults(filteredGames);\r\n    setShowSearchResults(true);\r\n  };\r\n\r\n  const handleGameSelect = (game) => {\r\n    // Navega a la pantalla de detalles del juego al hacer clic en un juego\r\n    navigation.navigate('AppDetails ', { app: game });\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <SearchBar onSearch={handleSearch} />\r\n      {showSearchResults ? (\r\n        searchResults.length === 0 ? (\r\n          <Text>No se encontraron juegos</Text>\r\n        ) : (\r\n          <AppList data={searchResults} onItemClick={handleGameSelect} /> // Agrega onItemClick\r\n        )\r\n      ) : (\r\n        <AppList data={gamesData} onItemClick={handleGameSelect} /> // Agrega onItemClick\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,SAAS;AAClB,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAA0Cb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAAkDlB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1DE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAC9C,IAAMG,UAAU,GAAGf,aAAa,CAAC,CAAC;EAElC,IAAMgB,YAAY,GAAG,SAAfA,YAAYA,CAAIC,UAAU,EAAK;IAEnC,IAAMC,aAAa,GAAGrB,SAAS,CAACsB,MAAM,CAAC,UAACC,IAAI;MAAA,OAC1CA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;IAAA,CAC5D,CAAC;IACDZ,gBAAgB,CAACQ,aAAa,CAAC;IAC/BJ,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIJ,IAAI,EAAK;IAEjCL,UAAU,CAACU,QAAQ,CAAC,aAAa,EAAE;MAAEC,GAAG,EAAEN;IAAK,CAAC,CAAC;EACnD,CAAC;EAED,OACEhB,KAAA,CAACV,IAAI;IAAAiC,QAAA,GACHzB,IAAA,CAACJ,SAAS;MAAC8B,QAAQ,EAAEZ;IAAa,CAAE,CAAC,EACpCH,iBAAiB,GAChBJ,aAAa,CAACoB,MAAM,KAAK,CAAC,GACxB3B,IAAA,CAACN,IAAI;MAAA+B,QAAA,EAAC;IAAwB,CAAM,CAAC,GAErCzB,IAAA,CAACH,OAAO;MAAC+B,IAAI,EAAErB,aAAc;MAACsB,WAAW,EAAEP;IAAiB,CAAE,CAC/D,GAEDtB,IAAA,CAACH,OAAO;MAAC+B,IAAI,EAAEjC,SAAU;MAACkC,WAAW,EAAEP;IAAiB,CAAE,CAC3D;EAAA,CACG,CAAC;AAEX,CAAC;AAED,eAAenB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}