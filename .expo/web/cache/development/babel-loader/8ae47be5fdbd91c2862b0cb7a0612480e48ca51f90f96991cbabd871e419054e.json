{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { gamesData } from \"../data/gamesData\";\nimport SearchBar from \"../components/SearchBar\";\nimport AppList from \"../components/AppList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchResults = _useState2[0],\n    setSearchResults = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showSearchResults = _useState4[0],\n    setShowSearchResults = _useState4[1];\n  var handleSearch = function handleSearch(searchText) {\n    var filteredGames = gamesData.filter(function (game) {\n      return game.name.toLowerCase().includes(searchText.toLowerCase());\n    });\n    setSearchResults(filteredGames);\n    setShowSearchResults(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Lokify\"\n      })\n    }), _jsx(SearchBar, {\n      onSearch: handleSearch\n    }), showSearchResults ? searchResults.length === 0 ? _jsx(Text, {\n      children: \"No se encontraron juegos\"\n    }) : _jsx(AppList, {\n      data: searchResults\n    }) : _jsx(AppList, {\n      data: gamesData\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: 'green',\n    padding: 16,\n    alignItems: 'center'\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","View","FlatList","Text","StyleSheet","gamesData","SearchBar","AppList","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","showSearchResults","setShowSearchResults","handleSearch","searchText","filteredGames","filter","game","name","toLowerCase","includes","style","styles","container","children","header","headerTitle","onSearch","length","data","create","flex","backgroundColor","padding","alignItems","fontSize","fontWeight","color"],"sources":["C:/Users/Bruno/Desktop/TrabajoPC1/Screen/HomeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, FlatList, Text, StyleSheet } from 'react-native';\r\nimport { gamesData } from '../data/gamesData';\r\nimport SearchBar from '../components/SearchBar';\r\nimport AppList from '../components/AppList';\r\n\r\nconst HomeScreen = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n\r\n  const handleSearch = (searchText) => {\r\n    // Filtrar los juegos según el texto de búsqueda\r\n    const filteredGames = gamesData.filter((game) =>\r\n      game.name.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    setSearchResults(filteredGames);\r\n    setShowSearchResults(true);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Cambiar el color de fondo de la cabecera a verde */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Lokify</Text>\r\n      </View>\r\n\r\n      <SearchBar onSearch={handleSearch} />\r\n      {showSearchResults ? (\r\n        searchResults.length === 0 ? (\r\n          <Text>No se encontraron juegos</Text>\r\n        ) : (\r\n          <AppList data={searchResults} />\r\n        )\r\n      ) : (\r\n        <AppList data={gamesData} />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    backgroundColor: 'green', // Cambiar el color de fondo a verde\r\n    padding: 16,\r\n    alignItems: 'center',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white', // Cambiar el color del texto a blanco para que sea legible sobre el fondo verde\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,SAAS;AAClB,OAAOC,SAAS;AAChB,OAAOC,OAAO;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAA0Cb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAAkDlB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1DE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAE9C,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIC,UAAU,EAAK;IAEnC,IAAMC,aAAa,GAAGnB,SAAS,CAACoB,MAAM,CAAC,UAACC,IAAI;MAAA,OAC1CA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;IAAA,CAC5D,CAAC;IACDX,gBAAgB,CAACO,aAAa,CAAC;IAC/BH,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,OACEV,KAAA,CAACV,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE5BxB,IAAA,CAACR,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,EACzBxB,IAAA,CAACN,IAAI;QAAC2B,KAAK,EAAEC,MAAM,CAACI,WAAY;QAAAF,QAAA,EAAC;MAAM,CAAM;IAAC,CAC1C,CAAC,EAEPxB,IAAA,CAACH,SAAS;MAAC8B,QAAQ,EAAEd;IAAa,CAAE,CAAC,EACpCF,iBAAiB,GAChBJ,aAAa,CAACqB,MAAM,KAAK,CAAC,GACxB5B,IAAA,CAACN,IAAI;MAAA8B,QAAA,EAAC;IAAwB,CAAM,CAAC,GAErCxB,IAAA,CAACF,OAAO;MAAC+B,IAAI,EAAEtB;IAAc,CAAE,CAChC,GAEDP,IAAA,CAACF,OAAO;MAAC+B,IAAI,EAAEjC;IAAU,CAAE,CAC5B;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAM0B,MAAM,GAAG3B,UAAU,CAACmC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE;EACR,CAAC;EACDN,MAAM,EAAE;IACNO,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDR,WAAW,EAAE;IACXS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAelC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}